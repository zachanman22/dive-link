import chardet
from base64 import encode
from bluebuzz_ecc import BlueBuzz_ECC
import json
import numpy as np


bb_ecc = BlueBuzz_ECC(0, 10)
messasgeenc = bb_ecc.encode(b"hello how are you today hell how are you today")
messasgeenc = messasgeenc
print(messasgeenc)
print(len(messasgeenc))
print(bb_ecc.decode(messasgeenc))
# encodedMessage = bb_ecc.encode(
#     "hello how are you today hello how are you today hello how are you today hello how are you today hello how are you today")
# exampleMessage = {"m": 4, "d
#                                 "101101000101100110010110100011011000000001101100000000110111100110001000001101001101000101100110111100110011101111100000100000110100110000100010011100101110101100101101000010000011010011110011110001101111001100111010101101001000001101001110100111100110111100110011001000011101100001000100111100111100001000001101001101000101100110010110100011011000000001101100000000110111100110001000001101001101000101100110111100110011101111100000100000110100110000100010011100101110101100101101000010000011010011110011110001101111001100111010101101001000001101001110100111100110111100110011001000011101100001000100111100111100001000001101001101000101100110010110100011011000000001101100000000110111100110001000001101001101000101100110111100110011101111100000100000110100110000100010011100101110101100101101000010000011010011110011110001101111001101010000000110001100110010100111101000011001100000010011010100001111000110101000011111000111101000000011011101111110101011100101011010101011011101010101101110111010101101001000001101001110100111100110111100110011001000011101100001000100111100111100001000001101001101000101100110010110100011011000000001101100000000110111100110001000001101001101000101100110111100110011101111100000100000110100110000100010011100101110101100101101000010000011010011110011110001101111001100111010101101001000001101001110100111100110111100110011001000011101100001000100111100111100001000001101001101000101100110010110100011011000000001101100000000110111100110001000001101001101000101100110111100110011101111100000100000110100110000100010011100101110101100101101000010000011010011110011110001101111001100111010101101001000001101001110100111100110111100110011001000011101100001000100111100111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111011100100101011110101100111101101001001000100111100000110000110001111011101001100000001110000111011001000101111101001001110101011011111110010000011110000",

}
# exampleMessage2 = json.dumps(exampleMessage)
# encodedMessage20 = exampleMessage2.encode()
# decodedMessage = json.loads(encodedMessage20.decode('UTF-8'))

# print(bb_ecc.decodeJson(decodedMessage))
# message=np.random.bytes(10000)

# # for c in message:
# #     print(c)
# message.decode('Windows-1252')
# print(chardet.detect(message))
# print(bb_ecc.decode(encodedMessage))
# print(encodedMessage.encode())
