import chardet
from base64 import encode
from bluebuzz_ecc import BlueBuzz_ECC
import json
import numpy as np
from reedsolo import RSCodec, ReedSolomonError
from bitstring import BitArray

bbc_ecc = BlueBuzz_ECC(0, 10)

stringMessage = "011010000110010101101100011011000110111101001000011011110111011101100100011110010011010000001101000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001100101000010011110101011111101001101011001101110101110001110110110100"
exampleMessage = {"m": 11, "d": ["1011010000110000101101100001011000110101101000000001011110111011101100100001110000011010000001101000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001100101000000011110101011111101001101011000101110101110001110110100100000000000101010101010101110101110101111101111101", "1011010000110000101101100001011000110101101000000001011110111011101100100001110000011010000001101000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001100101000000011110101011111101001101011000101110101110001110110100100000000000101010101010101110101110101111101111101", "1011010000110000101101100001011000110101101001000001011110111011101100100001110000011010000001101000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001100101000000011110101011111101001101011000101110101110001110110100100000000000101010101010101110101110101111101111101",
}
stringMessageList = list(stringMessage)
for x in exampleMessage["d"]:
    newMessageList = list(x)
    counter = 0
    for index in range(0, len(stringMessageList)):
        if newMessageList[index+1] == stringMessageList[index]:
            counter = counter + 1
    print(counter, len(stringMessageList))


encodedExampleMessageJson = json.dumps(exampleMessage).encode()
exampleMessageJson = json.loads(encodedExampleMessageJson.decode('UTF-8'))
print(bbc_ecc.decodeJson(exampleMessageJson))
